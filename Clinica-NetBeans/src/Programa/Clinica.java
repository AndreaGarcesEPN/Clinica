/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Programa;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Andrea
 */
public class Clinica extends javax.swing.JFrame {

    /**
     * Creates new form Clinica
     */
    int xx;
    int xy;
    int contPacientes = 0;
    String estadoPaciente = "null";
    String apellido1 = "null";
    String apellido2 = "null";
    String nombre = "null";
    String nombreCompleto = "null";
    int historiaClinica;
    String sexo = "null";
    String fechaNacimiento = "null";
    int edad;
    String grupoSanguineo = "null";
    String cedula = "null";
    String telefono = "null";
    String celular = "null";
    String direccion = "null";
    String provincia = "null";
    String email = "null";
    String observaciones = "null";
    String antPersonales = "null";
    String antFamiliares = "null";
    String alergias = "null";
    String vacunas = "null";
    String ocupacion = "null";
    String instruccion = "null";
    Conexion conn = new Conexion();
    String fechaH = "null";
    String anamnesis = "null";
    String exploracion = "null";
    String diagnostico = "null";
    String tratamiento = "null";
    LinkedList<Integer> num = new LinkedList();
    int numHC;

    public Clinica() {
        initComponents();
        Conexion.connect();
        obtenerFecha();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pOpciones = new javax.swing.JPanel();
        btnFicha = new javax.swing.JPanel();
        lblFicha = new javax.swing.JLabel();
        iconFicha = new javax.swing.JLabel();
        btnHClinicas = new javax.swing.JPanel();
        lblHClinicas = new javax.swing.JLabel();
        iconHClinicas = new javax.swing.JLabel();
        btnCitas = new javax.swing.JPanel();
        lblCitas = new javax.swing.JLabel();
        iconCitas = new javax.swing.JLabel();
        btnPacientes = new javax.swing.JPanel();
        lblPacientes = new javax.swing.JLabel();
        iconPacientes = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pVista = new javax.swing.JPanel();
        btnSalir = new javax.swing.JLabel();
        pCambioOpciones = new javax.swing.JLayeredPane();
        pPacientes = new javax.swing.JPanel();
        btnNuevoP = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        rbAlta1 = new javax.swing.JRadioButton();
        rbBaja1 = new javax.swing.JRadioButton();
        rbTodos = new javax.swing.JRadioButton();
        lblBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tPacientes = new javax.swing.JTable();
        pFichaPaciente = new javax.swing.JPanel();
        rbBaja = new javax.swing.JRadioButton();
        rbAlta = new javax.swing.JRadioButton();
        lblEstadoPaciente = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JLabel();
        btnBorrar = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JLabel();
        lblApellido1 = new javax.swing.JLabel();
        txtApellido1 = new javax.swing.JTextField();
        lblApellido2 = new javax.swing.JLabel();
        txtApellido2 = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblEdad = new javax.swing.JLabel();
        spEdad = new javax.swing.JSpinner();
        lblfechaNacimiento = new javax.swing.JLabel();
        rbMujer = new javax.swing.JRadioButton();
        rbHombre = new javax.swing.JRadioButton();
        txtHistClinica = new javax.swing.JTextField();
        lblHistCLinica = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtProvincia = new javax.swing.JTextField();
        lblProvincia = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblObservaciones = new javax.swing.JLabel();
        txtObservaciones = new javax.swing.JTextField();
        btnAntecedentesP = new javax.swing.JLabel();
        btnAntecedentesF = new javax.swing.JLabel();
        btnAlergias = new javax.swing.JLabel();
        btnVacunas = new javax.swing.JLabel();
        pSubOpciones = new javax.swing.JLayeredPane();
        pAntP = new javax.swing.JPanel();
        jspAntP = new javax.swing.JScrollPane();
        txaAntP = new javax.swing.JTextArea();
        pAntF = new javax.swing.JPanel();
        jspAntF = new javax.swing.JScrollPane();
        txaAntF = new javax.swing.JTextArea();
        pAlergias = new javax.swing.JPanel();
        jspAlergias = new javax.swing.JScrollPane();
        txaAlergias = new javax.swing.JTextArea();
        pVacunas = new javax.swing.JPanel();
        jspVacunas = new javax.swing.JScrollPane();
        txaVacunas = new javax.swing.JTextArea();
        txtGrpSangui = new javax.swing.JTextField();
        lblGrpSangui = new javax.swing.JLabel();
        sfDia = new com.toedter.components.JSpinField();
        sfMes = new com.toedter.components.JSpinField();
        sfAnio = new com.toedter.calendar.JYearChooser();
        lblCedula = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtOcupacion = new javax.swing.JTextField();
        lblOcupacion = new javax.swing.JLabel();
        txtInstruccion = new javax.swing.JTextField();
        lblInstruccion = new javax.swing.JLabel();
        pHClinicas = new javax.swing.JPanel();
        btnLimpiarH = new javax.swing.JLabel();
        btnBorrarH = new javax.swing.JLabel();
        btnGuardarH = new javax.swing.JLabel();
        lblPacienteH = new javax.swing.JLabel();
        txtPacienteH = new javax.swing.JLabel();
        pSubOpcionesH = new javax.swing.JLayeredPane();
        pAnamnesis = new javax.swing.JPanel();
        jspAnamnesis = new javax.swing.JScrollPane();
        txaAnamnesis = new javax.swing.JTextArea();
        pExploracion = new javax.swing.JPanel();
        jspExploracion = new javax.swing.JScrollPane();
        txaExploracion = new javax.swing.JTextArea();
        pDiagnostico = new javax.swing.JPanel();
        jspDiagnostico = new javax.swing.JScrollPane();
        txaDiagnostico = new javax.swing.JTextArea();
        pTratamiento = new javax.swing.JPanel();
        jspTratamiento = new javax.swing.JScrollPane();
        txaTratamiento = new javax.swing.JTextArea();
        btnTratamiento = new javax.swing.JLabel();
        btnDiagnostico = new javax.swing.JLabel();
        btnExploracion = new javax.swing.JLabel();
        btnAnamnesis = new javax.swing.JLabel();
        lblHConsultas = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tHConsultas = new javax.swing.JTable();
        lblFechaH = new javax.swing.JLabel();
        sfDiaH = new com.toedter.components.JSpinField();
        sfMesH = new com.toedter.components.JSpinField();
        sfAnioH = new com.toedter.calendar.JYearChooser();
        lblNumero = new javax.swing.JLabel();
        txtNumeroH = new javax.swing.JLabel();
        pCitas = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        pOpciones.setBackground(new java.awt.Color(66, 64, 104));
        pOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pOpcionesMousePressed(evt);
            }
        });

        btnFicha.setBackground(new java.awt.Color(53, 127, 166));
        btnFicha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFicha.setPreferredSize(new java.awt.Dimension(198, 37));
        btnFicha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnFichaMousePressed(evt);
            }
        });

        lblFicha.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        lblFicha.setForeground(new java.awt.Color(163, 237, 212));
        lblFicha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFicha.setText("Ficha Paciente");
        lblFicha.setPreferredSize(new java.awt.Dimension(49, 15));

        iconFicha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_pencil_26px_2.png"))); // NOI18N
        iconFicha.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout btnFichaLayout = new javax.swing.GroupLayout(btnFicha);
        btnFicha.setLayout(btnFichaLayout);
        btnFichaLayout.setHorizontalGroup(
            btnFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconFicha, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFicha, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnFichaLayout.setVerticalGroup(
            btnFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconFicha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(btnFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFicha, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnHClinicas.setBackground(new java.awt.Color(53, 127, 166));
        btnHClinicas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHClinicas.setPreferredSize(new java.awt.Dimension(198, 37));
        btnHClinicas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnHClinicasMousePressed(evt);
            }
        });

        lblHClinicas.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        lblHClinicas.setForeground(new java.awt.Color(163, 237, 212));
        lblHClinicas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHClinicas.setText("H.Clínicas");
        lblHClinicas.setPreferredSize(new java.awt.Dimension(49, 15));

        iconHClinicas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconHClinicas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_book_30px_2.png"))); // NOI18N

        javax.swing.GroupLayout btnHClinicasLayout = new javax.swing.GroupLayout(btnHClinicas);
        btnHClinicas.setLayout(btnHClinicasLayout);
        btnHClinicasLayout.setHorizontalGroup(
            btnHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHClinicasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconHClinicas, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHClinicas, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnHClinicasLayout.setVerticalGroup(
            btnHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconHClinicas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(btnHClinicasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHClinicas, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCitas.setBackground(new java.awt.Color(53, 127, 166));
        btnCitas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCitas.setPreferredSize(new java.awt.Dimension(198, 37));
        btnCitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnCitasMousePressed(evt);
            }
        });

        lblCitas.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        lblCitas.setForeground(new java.awt.Color(163, 237, 212));
        lblCitas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCitas.setText("Citas");
        lblCitas.setPreferredSize(new java.awt.Dimension(49, 15));

        iconCitas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconCitas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_calendar_30px_3.png"))); // NOI18N

        javax.swing.GroupLayout btnCitasLayout = new javax.swing.GroupLayout(btnCitas);
        btnCitas.setLayout(btnCitasLayout);
        btnCitasLayout.setHorizontalGroup(
            btnCitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCitasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnCitasLayout.setVerticalGroup(
            btnCitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconCitas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(btnCitasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCitas, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnPacientes.setBackground(new java.awt.Color(53, 127, 166));
        btnPacientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPacientes.setPreferredSize(new java.awt.Dimension(198, 37));
        btnPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnPacientesMousePressed(evt);
            }
        });

        lblPacientes.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        lblPacientes.setForeground(new java.awt.Color(163, 237, 212));
        lblPacientes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPacientes.setText("Pacientes");

        iconPacientes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconPacientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_person_30px_4.png"))); // NOI18N

        javax.swing.GroupLayout btnPacientesLayout = new javax.swing.GroupLayout(btnPacientes);
        btnPacientes.setLayout(btnPacientesLayout);
        btnPacientesLayout.setHorizontalGroup(
            btnPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnPacientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iconPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btnPacientesLayout.setVerticalGroup(
            btnPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(btnPacientesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/WhatsApp Image 2020-03-15 at 12.27.20 PM.jpg"))); // NOI18N

        javax.swing.GroupLayout pOpcionesLayout = new javax.swing.GroupLayout(pOpciones);
        pOpciones.setLayout(pOpcionesLayout);
        pOpcionesLayout.setHorizontalGroup(
            pOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnFicha, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
            .addComponent(btnHClinicas, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
            .addComponent(btnCitas, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
            .addComponent(btnPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
            .addGroup(pOpcionesLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(17, 17, 17))
        );
        pOpcionesLayout.setVerticalGroup(
            pOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pOpcionesLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFicha, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHClinicas, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCitas, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pVista.setBackground(new java.awt.Color(58, 201, 205));
        pVista.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSalir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSalir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_delete_26px.png"))); // NOI18N
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSalirMousePressed(evt);
            }
        });
        pVista.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, -1, -1));

        pCambioOpciones.setLayout(new java.awt.CardLayout());

        pPacientes.setBackground(new java.awt.Color(58, 201, 205));

        btnNuevoP.setBackground(new java.awt.Color(53, 127, 166));
        btnNuevoP.setForeground(new java.awt.Color(163, 237, 212));
        btnNuevoP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnNuevoP.setText("Nuevo Paciente");
        btnNuevoP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevoP.setOpaque(true);
        btnNuevoP.setPreferredSize(new java.awt.Dimension(65, 23));
        btnNuevoP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnNuevoPMousePressed(evt);
            }
        });

        lblEstado.setText("Estado:");

        rbAlta1.setText("Alta");
        rbAlta1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbAlta1MousePressed(evt);
            }
        });

        rbBaja1.setText("Baja");
        rbBaja1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbBaja1MousePressed(evt);
            }
        });

        rbTodos.setText("Todos");
        rbTodos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbTodosMousePressed(evt);
            }
        });

        lblBuscar.setText("Buscar:");

        txtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtBuscarMousePressed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });

        tPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cédula", "Celular", "Historia.C", "Observaciones"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tPacientes.getTableHeader().setReorderingAllowed(false);
        tPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tPacientesMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tPacientes);

        javax.swing.GroupLayout pPacientesLayout = new javax.swing.GroupLayout(pPacientes);
        pPacientes.setLayout(pPacientesLayout);
        pPacientesLayout.setHorizontalGroup(
            pPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPacientesLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnNuevoP, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(lblEstado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbAlta1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbBaja1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbTodos)
                .addGap(20, 20, 20)
                .addComponent(lblBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(207, Short.MAX_VALUE))
            .addGroup(pPacientesLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane5))
        );
        pPacientesLayout.setVerticalGroup(
            pPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pPacientesLayout.createSequentialGroup()
                .addGroup(pPacientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstado)
                    .addComponent(rbAlta1)
                    .addComponent(rbBaja1)
                    .addComponent(rbTodos)
                    .addComponent(lblBuscar)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pCambioOpciones.add(pPacientes, "card3");

        pFichaPaciente.setBackground(new java.awt.Color(58, 201, 205));

        rbBaja.setText("Baja");

        rbAlta.setText("Alta");

        lblEstadoPaciente.setText("Estado Paciente:");

        btnLimpiar.setBackground(new java.awt.Color(53, 127, 166));
        btnLimpiar.setForeground(new java.awt.Color(163, 237, 212));
        btnLimpiar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.setOpaque(true);
        btnLimpiar.setPreferredSize(new java.awt.Dimension(65, 23));
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLimpiarMousePressed(evt);
            }
        });

        btnBorrar.setBackground(new java.awt.Color(53, 127, 166));
        btnBorrar.setForeground(new java.awt.Color(163, 237, 212));
        btnBorrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBorrar.setText("Borrar");
        btnBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrar.setOpaque(true);
        btnBorrar.setPreferredSize(new java.awt.Dimension(65, 23));
        btnBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBorrarMousePressed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(53, 127, 166));
        btnGuardar.setForeground(new java.awt.Color(163, 237, 212));
        btnGuardar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnGuardar.setText("Guardar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setOpaque(true);
        btnGuardar.setPreferredSize(new java.awt.Dimension(65, 23));
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnGuardarMousePressed(evt);
            }
        });

        lblApellido1.setText("Apellido:");

        lblApellido2.setText("Apellido:");

        lblNombre.setText("Nombre:");

        lblEdad.setText("Edad:");

        spEdad.setModel(new javax.swing.SpinnerNumberModel(0, 0, 150, 1));

        lblfechaNacimiento.setText("Nacimiento:");

        rbMujer.setText("Mujer");

        rbHombre.setText("Hombre");

        txtHistClinica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHistClinicaKeyPressed(evt);
            }
        });

        lblHistCLinica.setText("Hist.Clínica:");

        lblTelefono.setText("Teléfono:");

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyPressed(evt);
            }
        });

        lblCelular.setText("Celular:");

        txtCelular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCelularKeyPressed(evt);
            }
        });

        lblDireccion.setText("Email:");

        lblProvincia.setText("Provincia:");

        lblEmail.setText("Direccion:");

        lblObservaciones.setText("Observaciones:");

        btnAntecedentesP.setBackground(new java.awt.Color(103, 127, 166));
        btnAntecedentesP.setForeground(new java.awt.Color(163, 237, 212));
        btnAntecedentesP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAntecedentesP.setText("Ant.Personales");
        btnAntecedentesP.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAntecedentesP.setOpaque(true);
        btnAntecedentesP.setPreferredSize(new java.awt.Dimension(65, 23));
        btnAntecedentesP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAntecedentesPMousePressed(evt);
            }
        });

        btnAntecedentesF.setBackground(new java.awt.Color(53, 127, 166));
        btnAntecedentesF.setForeground(new java.awt.Color(163, 237, 212));
        btnAntecedentesF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAntecedentesF.setText("Ant.Familiares");
        btnAntecedentesF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAntecedentesF.setOpaque(true);
        btnAntecedentesF.setPreferredSize(new java.awt.Dimension(65, 23));
        btnAntecedentesF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAntecedentesFMousePressed(evt);
            }
        });

        btnAlergias.setBackground(new java.awt.Color(53, 127, 166));
        btnAlergias.setForeground(new java.awt.Color(163, 237, 212));
        btnAlergias.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAlergias.setText("Alergias");
        btnAlergias.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlergias.setOpaque(true);
        btnAlergias.setPreferredSize(new java.awt.Dimension(65, 23));
        btnAlergias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAlergiasMousePressed(evt);
            }
        });

        btnVacunas.setBackground(new java.awt.Color(53, 127, 166));
        btnVacunas.setForeground(new java.awt.Color(163, 237, 212));
        btnVacunas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnVacunas.setText("Vacunas");
        btnVacunas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVacunas.setOpaque(true);
        btnVacunas.setPreferredSize(new java.awt.Dimension(65, 23));
        btnVacunas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnVacunasMousePressed(evt);
            }
        });

        pSubOpciones.setBackground(new java.awt.Color(255, 255, 255));
        pSubOpciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pSubOpciones.setForeground(new java.awt.Color(255, 255, 255));
        pSubOpciones.setLayout(new java.awt.CardLayout());

        txaAntP.setColumns(20);
        txaAntP.setRows(3);
        txaAntP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txaAntPKeyPressed(evt);
            }
        });
        jspAntP.setViewportView(txaAntP);

        javax.swing.GroupLayout pAntPLayout = new javax.swing.GroupLayout(pAntP);
        pAntP.setLayout(pAntPLayout);
        pAntPLayout.setHorizontalGroup(
            pAntPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspAntP, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        pAntPLayout.setVerticalGroup(
            pAntPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspAntP, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        pSubOpciones.add(pAntP, "card2");

        txaAntF.setColumns(20);
        txaAntF.setRows(3);
        txaAntF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txaAntFKeyPressed(evt);
            }
        });
        jspAntF.setViewportView(txaAntF);

        javax.swing.GroupLayout pAntFLayout = new javax.swing.GroupLayout(pAntF);
        pAntF.setLayout(pAntFLayout);
        pAntFLayout.setHorizontalGroup(
            pAntFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspAntF, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        pAntFLayout.setVerticalGroup(
            pAntFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspAntF, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        pSubOpciones.add(pAntF, "card3");

        txaAlergias.setColumns(20);
        txaAlergias.setRows(3);
        txaAlergias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txaAlergiasKeyPressed(evt);
            }
        });
        jspAlergias.setViewportView(txaAlergias);

        javax.swing.GroupLayout pAlergiasLayout = new javax.swing.GroupLayout(pAlergias);
        pAlergias.setLayout(pAlergiasLayout);
        pAlergiasLayout.setHorizontalGroup(
            pAlergiasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspAlergias, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        pAlergiasLayout.setVerticalGroup(
            pAlergiasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspAlergias, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        pSubOpciones.add(pAlergias, "card4");

        txaVacunas.setColumns(20);
        txaVacunas.setRows(3);
        txaVacunas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txaVacunasKeyPressed(evt);
            }
        });
        jspVacunas.setViewportView(txaVacunas);

        javax.swing.GroupLayout pVacunasLayout = new javax.swing.GroupLayout(pVacunas);
        pVacunas.setLayout(pVacunasLayout);
        pVacunasLayout.setHorizontalGroup(
            pVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspVacunas, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        pVacunasLayout.setVerticalGroup(
            pVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspVacunas, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );

        pSubOpciones.add(pVacunas, "card5");

        lblGrpSangui.setText("Grp.Sangui:");

        sfDia.setMaximum(31);
        sfDia.setMinimum(0);

        sfMes.setMaximum(12);
        sfMes.setMinimum(0);

        lblCedula.setText("Cedula:");

        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });

        lblOcupacion.setText("Ocupación:");

        lblInstruccion.setText("Instrucción:");

        javax.swing.GroupLayout pFichaPacienteLayout = new javax.swing.GroupLayout(pFichaPaciente);
        pFichaPaciente.setLayout(pFichaPacienteLayout);
        pFichaPacienteLayout.setHorizontalGroup(
            pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pSubOpciones)
                    .addGroup(pFichaPacienteLayout.createSequentialGroup()
                        .addComponent(lblOcupacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblInstruccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pFichaPacienteLayout.createSequentialGroup()
                        .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                .addComponent(lblApellido1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblApellido2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEdad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                        .addComponent(lblHistCLinica)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtHistClinica, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pFichaPacienteLayout.createSequentialGroup()
                                        .addComponent(lblCedula)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCedula)
                                        .addGap(15, 15, 15)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbHombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbMujer)
                                .addGap(18, 18, 18)
                                .addComponent(lblfechaNacimiento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sfDia, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sfMes, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sfAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                .addComponent(btnAntecedentesP, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btnAntecedentesF, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btnAlergias, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btnVacunas, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(pFichaPacienteLayout.createSequentialGroup()
                        .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                .addComponent(lblObservaciones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtObservaciones))
                            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                .addComponent(lblProvincia)
                                .addGap(4, 4, 4)
                                .addComponent(txtProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(lblEmail)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDireccion))
                            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                .addComponent(lblCelular)
                                .addGap(4, 4, 4)
                                .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(lblDireccion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                        .addComponent(lblGrpSangui)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtGrpSangui, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblTelefono)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtEmail)))
                            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                                .addComponent(lblEstadoPaciente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbAlta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbBaja)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))))
        );
        pFichaPacienteLayout.setVerticalGroup(
            pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pFichaPacienteLayout.createSequentialGroup()
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbAlta)
                        .addComponent(rbBaja))
                    .addComponent(lblEstadoPaciente))
                .addGap(18, 18, 18)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtApellido1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pFichaPacienteLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblApellido1)
                            .addComponent(lblApellido2)
                            .addComponent(lblNombre)
                            .addComponent(lblEdad))))
                .addGap(16, 16, 16)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(sfMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sfDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sfAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbHombre)
                        .addComponent(lblCedula)
                        .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbMujer))
                    .addGroup(pFichaPacienteLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblfechaNacimiento)))
                .addGap(16, 16, 16)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHistCLinica)
                    .addComponent(txtHistClinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGrpSangui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrpSangui)
                    .addComponent(lblTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOcupacion)
                    .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInstruccion))
                .addGap(16, 16, 16)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCelular))
                    .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDireccion)))
                .addGap(16, 16, 16)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblProvincia))
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pFichaPacienteLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblEmail)))
                .addGap(16, 16, 16)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblObservaciones)
                    .addComponent(txtObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(pFichaPacienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAntecedentesP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAntecedentesF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlergias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVacunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pSubOpciones)
                .addGap(10, 10, 10))
        );

        pCambioOpciones.add(pFichaPaciente, "card2");

        pHClinicas.setBackground(new java.awt.Color(58, 201, 205));

        btnLimpiarH.setBackground(new java.awt.Color(53, 127, 166));
        btnLimpiarH.setForeground(new java.awt.Color(163, 237, 212));
        btnLimpiarH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnLimpiarH.setText("Limpiar");
        btnLimpiarH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiarH.setOpaque(true);
        btnLimpiarH.setPreferredSize(new java.awt.Dimension(65, 23));
        btnLimpiarH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLimpiarHMousePressed(evt);
            }
        });

        btnBorrarH.setBackground(new java.awt.Color(53, 127, 166));
        btnBorrarH.setForeground(new java.awt.Color(163, 237, 212));
        btnBorrarH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBorrarH.setText("Borrar");
        btnBorrarH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrarH.setOpaque(true);
        btnBorrarH.setPreferredSize(new java.awt.Dimension(65, 23));
        btnBorrarH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnBorrarHMousePressed(evt);
            }
        });

        btnGuardarH.setBackground(new java.awt.Color(53, 127, 166));
        btnGuardarH.setForeground(new java.awt.Color(163, 237, 212));
        btnGuardarH.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnGuardarH.setText("Guardar");
        btnGuardarH.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardarH.setOpaque(true);
        btnGuardarH.setPreferredSize(new java.awt.Dimension(65, 23));
        btnGuardarH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnGuardarHMousePressed(evt);
            }
        });

        lblPacienteH.setText("Paciente:");

        pSubOpcionesH.setLayout(new java.awt.CardLayout());

        pAnamnesis.setPreferredSize(new java.awt.Dimension(0, 287));

        txaAnamnesis.setColumns(20);
        txaAnamnesis.setRows(5);
        txaAnamnesis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txaAnamnesisKeyPressed(evt);
            }
        });
        jspAnamnesis.setViewportView(txaAnamnesis);

        javax.swing.GroupLayout pAnamnesisLayout = new javax.swing.GroupLayout(pAnamnesis);
        pAnamnesis.setLayout(pAnamnesisLayout);
        pAnamnesisLayout.setHorizontalGroup(
            pAnamnesisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspAnamnesis, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        pAnamnesisLayout.setVerticalGroup(
            pAnamnesisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspAnamnesis, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
        );

        pSubOpcionesH.add(pAnamnesis, "card2");

        pExploracion.setPreferredSize(new java.awt.Dimension(0, 287));

        txaExploracion.setColumns(20);
        txaExploracion.setRows(5);
        jspExploracion.setViewportView(txaExploracion);

        javax.swing.GroupLayout pExploracionLayout = new javax.swing.GroupLayout(pExploracion);
        pExploracion.setLayout(pExploracionLayout);
        pExploracionLayout.setHorizontalGroup(
            pExploracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspExploracion, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        pExploracionLayout.setVerticalGroup(
            pExploracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspExploracion, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
        );

        pSubOpcionesH.add(pExploracion, "card3");

        pDiagnostico.setPreferredSize(new java.awt.Dimension(0, 287));

        txaDiagnostico.setColumns(20);
        txaDiagnostico.setRows(5);
        jspDiagnostico.setViewportView(txaDiagnostico);

        javax.swing.GroupLayout pDiagnosticoLayout = new javax.swing.GroupLayout(pDiagnostico);
        pDiagnostico.setLayout(pDiagnosticoLayout);
        pDiagnosticoLayout.setHorizontalGroup(
            pDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspDiagnostico, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        pDiagnosticoLayout.setVerticalGroup(
            pDiagnosticoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspDiagnostico, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
        );

        pSubOpcionesH.add(pDiagnostico, "card4");

        pTratamiento.setPreferredSize(new java.awt.Dimension(0, 287));

        txaTratamiento.setColumns(20);
        txaTratamiento.setRows(5);
        jspTratamiento.setViewportView(txaTratamiento);

        javax.swing.GroupLayout pTratamientoLayout = new javax.swing.GroupLayout(pTratamiento);
        pTratamiento.setLayout(pTratamientoLayout);
        pTratamientoLayout.setHorizontalGroup(
            pTratamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspTratamiento, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        pTratamientoLayout.setVerticalGroup(
            pTratamientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jspTratamiento, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
        );

        pSubOpcionesH.add(pTratamiento, "card5");

        btnTratamiento.setBackground(new java.awt.Color(53, 127, 166));
        btnTratamiento.setForeground(new java.awt.Color(163, 237, 212));
        btnTratamiento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnTratamiento.setText("Tratamiento");
        btnTratamiento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTratamiento.setOpaque(true);
        btnTratamiento.setPreferredSize(new java.awt.Dimension(65, 23));
        btnTratamiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnTratamientoMousePressed(evt);
            }
        });

        btnDiagnostico.setBackground(new java.awt.Color(53, 127, 166));
        btnDiagnostico.setForeground(new java.awt.Color(163, 237, 212));
        btnDiagnostico.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDiagnostico.setText("Diagnóstico");
        btnDiagnostico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDiagnostico.setOpaque(true);
        btnDiagnostico.setPreferredSize(new java.awt.Dimension(65, 23));
        btnDiagnostico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDiagnosticoMousePressed(evt);
            }
        });

        btnExploracion.setBackground(new java.awt.Color(53, 127, 166));
        btnExploracion.setForeground(new java.awt.Color(163, 237, 212));
        btnExploracion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnExploracion.setText("Exploración");
        btnExploracion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExploracion.setOpaque(true);
        btnExploracion.setPreferredSize(new java.awt.Dimension(65, 23));
        btnExploracion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnExploracionMousePressed(evt);
            }
        });

        btnAnamnesis.setBackground(new java.awt.Color(103, 127, 166));
        btnAnamnesis.setForeground(new java.awt.Color(163, 237, 212));
        btnAnamnesis.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAnamnesis.setText("Anamnesis");
        btnAnamnesis.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAnamnesis.setOpaque(true);
        btnAnamnesis.setPreferredSize(new java.awt.Dimension(65, 23));
        btnAnamnesis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnAnamnesisMousePressed(evt);
            }
        });

        lblHConsultas.setText("Histórico de Consultas");

        tHConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Anamnesis", "Exploración", "Diagnóstico", "Tratamiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tHConsultas.getTableHeader().setReorderingAllowed(false);
        tHConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tHConsultasMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tHConsultas);

        lblFechaH.setText("Fecha:");

        sfDiaH.setMaximum(31);
        sfDiaH.setMinimum(0);

        sfMesH.setMaximum(12);
        sfMesH.setMinimum(0);

        lblNumero.setText("Número:");

        javax.swing.GroupLayout pHClinicasLayout = new javax.swing.GroupLayout(pHClinicas);
        pHClinicas.setLayout(pHClinicasLayout);
        pHClinicasLayout.setHorizontalGroup(
            pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pHClinicasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pHClinicasLayout.createSequentialGroup()
                        .addGroup(pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pHClinicasLayout.createSequentialGroup()
                                .addComponent(lblPacienteH)
                                .addGap(12, 12, 12)
                                .addComponent(txtPacienteH, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pHClinicasLayout.createSequentialGroup()
                                .addComponent(lblNumero)
                                .addGap(12, 12, 12)
                                .addComponent(txtNumeroH, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiarH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnBorrarH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnGuardarH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(pHClinicasLayout.createSequentialGroup()
                        .addComponent(lblHConsultas)
                        .addGap(0, 594, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pHClinicasLayout.createSequentialGroup()
                        .addComponent(jScrollPane6)
                        .addContainerGap())
                    .addComponent(pSubOpcionesH, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pHClinicasLayout.createSequentialGroup()
                        .addComponent(btnAnamnesis, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnExploracion, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(lblFechaH)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sfDiaH, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sfMesH, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sfAnioH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
        );
        pHClinicasLayout.setVerticalGroup(
            pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pHClinicasLayout.createSequentialGroup()
                .addGroup(pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimpiarH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrarH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardarH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pHClinicasLayout.createSequentialGroup()
                        .addGroup(pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPacienteH)
                            .addComponent(txtPacienteH, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(lblNumero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNumeroH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAnamnesis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExploracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFechaH))
                    .addGroup(pHClinicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(sfMesH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sfDiaH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sfAnioH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pSubOpcionesH, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblHConsultas)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pCambioOpciones.add(pHClinicas, "card4");

        jLabel4.setText("pCitas");

        javax.swing.GroupLayout pCitasLayout = new javax.swing.GroupLayout(pCitas);
        pCitas.setLayout(pCitasLayout);
        pCitasLayout.setHorizontalGroup(
            pCitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCitasLayout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(jLabel4)
                .addContainerGap(388, Short.MAX_VALUE))
        );
        pCitasLayout.setVerticalGroup(
            pCitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCitasLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jLabel4)
                .addContainerGap(300, Short.MAX_VALUE))
        );

        pCambioOpciones.add(pCitas, "card5");

        pVista.add(pCambioOpciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 32, 710, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(pVista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pVista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFichaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFichaMousePressed
        // TODO add your handling code here:
        setColor(btnFicha);
        resetColor(btnCitas);
        resetColor(btnPacientes);
        resetColor(btnHClinicas);
        switchPanelsOpciones(pFichaPaciente);
        limpiarPacientes();
        num.clear();
        numHC = 0;
        //limpiarHClinicas();
        /*contPacientes++;
        String pacientes = Integer.toString(contPacientes);
        txtNumPaciente.setText(pacientes);*/
    }//GEN-LAST:event_btnFichaMousePressed

    private void btnHClinicasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHClinicasMousePressed
        // TODO add your handling code here:
        setColor(btnHClinicas);
        resetColor(btnCitas);
        resetColor(btnFicha);
        resetColor(btnPacientes);
        switchPanelsOpciones(pHClinicas);
        //limpiarFicha();
        limpiarPacientes();
        for (int c = 0; c < tHConsultas.getColumnCount(); c++) {
            Class<?> col_class = tHConsultas.getColumnClass(c);
            tHConsultas.setDefaultEditor(col_class, null);
        }
    }//GEN-LAST:event_btnHClinicasMousePressed

    private void btnCitasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCitasMousePressed
        // TODO add your handling code here:
        setColor(btnCitas);
        resetColor(btnPacientes);
        resetColor(btnFicha);
        resetColor(btnHClinicas);
        switchPanelsOpciones(pCitas);
        limpiarFicha();
        limpiarPacientes();
        limpiarHClinicas();
        num.clear();
        numHC = 0;
    }//GEN-LAST:event_btnCitasMousePressed

    private void btnPacientesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPacientesMousePressed
        // TODO add your handling code here:
        setColor(btnPacientes);
        resetColor(btnCitas);
        resetColor(btnFicha);
        resetColor(btnHClinicas);
        switchPanelsOpciones(pPacientes);
        System.out.println();
        mostrarP("select nombreCompleto, cedula, celular, historiaClinica, observaciones from paciente;");
        limpiarFicha();
        limpiarPacientes();
        limpiarHClinicas();
        num.clear();
        numHC = 0;
        obtenerFecha();
    }//GEN-LAST:event_btnPacientesMousePressed

    private void mostrarP(String cadena) {
        DefaultTableModel modelo = new DefaultTableModel();
        ResultSet rs = Conexion.getTabla(cadena);
        modelo.setColumnIdentifiers(new Object[]{"Nombre", "Cédula", "Celular", "Historia.C", "Observaciones"});
        try {
            while (rs.next()) {
                modelo.addRow(new Object[]{rs.getString("nombreCompleto"), rs.getString("cedula"), rs.getString("celular"), rs.getString("historiaClinica"), rs.getString("observaciones")});
            }
            tPacientes.setModel(modelo);
        } catch (SQLException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Paciente no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void pOpcionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pOpcionesMousePressed
        // TODO add your handling code here:
        resetColor(btnPacientes);
        resetColor(btnFicha);
        resetColor(btnHClinicas);
        resetColor(btnCitas);
        limpiarFicha();
        limpiarPacientes();
    }//GEN-LAST:event_pOpcionesMousePressed

    private void btnSalirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMousePressed
        // TODO add your handling code here:
        Conexion.desconectar();
        System.exit(0);
    }//GEN-LAST:event_btnSalirMousePressed

    private void btnAntecedentesPMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAntecedentesPMousePressed
        // TODO add your handling code here:
        btnAntecedentesP.setBackground(new Color(103, 127, 166));
        btnAntecedentesF.setBackground(new Color(53, 127, 166));
        btnAlergias.setBackground(new Color(53, 127, 166));
        btnVacunas.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpciones(pAntP);
        txaAntP.requestFocus();
    }//GEN-LAST:event_btnAntecedentesPMousePressed

    private void btnAntecedentesFMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAntecedentesFMousePressed
        // TODO add your handling code here:
        btnAntecedentesF.setBackground(new Color(103, 127, 166));
        btnAntecedentesP.setBackground(new Color(53, 127, 166));
        btnAlergias.setBackground(new Color(53, 127, 166));
        btnVacunas.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpciones(pAntF);
        txaAntF.requestFocus();
    }//GEN-LAST:event_btnAntecedentesFMousePressed

    private void btnAlergiasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlergiasMousePressed
        // TODO add your handling code here:
        btnAlergias.setBackground(new Color(103, 127, 166));
        btnAntecedentesF.setBackground(new Color(53, 127, 166));
        btnAntecedentesP.setBackground(new Color(53, 127, 166));
        btnVacunas.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpciones(pAlergias);
        txaAlergias.requestFocus();
    }//GEN-LAST:event_btnAlergiasMousePressed

    private void btnVacunasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVacunasMousePressed
        // TODO add your handling code here:
        btnVacunas.setBackground(new Color(103, 127, 166));
        btnAntecedentesF.setBackground(new Color(53, 127, 166));
        btnAntecedentesP.setBackground(new Color(53, 127, 166));
        btnAlergias.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpciones(pVacunas);
        txaVacunas.requestFocus();
    }//GEN-LAST:event_btnVacunasMousePressed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xx, y - xy);
    }//GEN-LAST:event_formMouseDragged

    private void btnGuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMousePressed
        // TODO add your handling code here:
        try {
            if (txtCedula.getText().trim().length() == 10) {
                if (rbAlta.isSelected()) {
                    estadoPaciente = "Alta";
                } else if (rbBaja.isSelected()) {
                    estadoPaciente = "Baja";
                } else {
                    estadoPaciente = "null";
                }
                if (txtApellido1.getText().trim().length() > 0) {
                    apellido1 = txtApellido1.getText().trim();
                    apellido2 = txtApellido2.getText().trim();
                    if (txtNombre.getText().trim().length() > 0) {
                        nombre = txtNombre.getText().trim();
                        nombreCompleto = apellido1 + " " + apellido2 + " " + nombre;
                        if (txtHistClinica.getText().equals("")) {
                            historiaClinica = 0;
                        } else {
                            historiaClinica = Integer.parseInt(txtHistClinica.getText().trim());
                        }
                        if (rbHombre.isSelected()) {
                            sexo = "Hombre";
                        } else if (rbMujer.isSelected()) {
                            sexo = "Mujer";
                        } else {
                            sexo = "null";
                        }
                        fechaNacimiento = sfAnio.getValue() + "-" + sfMes.getValue() + "-" + sfDia.getValue();
                        edad = (int) spEdad.getValue();
                        if (txtGrpSangui.getText().trim().length() > 0 && txtGrpSangui.getText().trim().length() <= 3) {
                            grupoSanguineo = txtGrpSangui.getText().trim();
                            cedula = txtCedula.getText().trim();
                            if (txtTelefono.getText().trim().length() == 9 || txtTelefono.getText().trim().length() == 7) {
                                telefono = txtTelefono.getText().trim();
                                ocupacion = txtOcupacion.getText().trim();
                                instruccion = txtInstruccion.getText().trim();
                                if (txtCelular.getText().trim().length() == 10) {
                                    celular = txtCelular.getText().trim();
                                    direccion = txtDireccion.getText().trim();
                                    provincia = txtProvincia.getText().trim();
                                    if (txtEmail.getText().contains("@") && txtEmail.getText().contains(".") && (txtEmail.getText().contains(" ") == false)) {
                                        email = txtEmail.getText().trim();
                                        observaciones = txtObservaciones.getText().trim();
                                        antPersonales = txaAntP.getText().trim();
                                        antFamiliares = txaAntF.getText().trim();
                                        alergias = txaAlergias.getText().trim();
                                        vacunas = txaVacunas.getText().trim();
                                        Paciente paciente = new Paciente(estadoPaciente, apellido1, apellido2, nombre, nombreCompleto, historiaClinica, sexo, fechaNacimiento,
                                                edad, grupoSanguineo, cedula, telefono, celular, direccion, provincia, email, observaciones, antPersonales,
                                                antFamiliares, alergias, vacunas, ocupacion, instruccion);
                                        if (Conexion.comprobarExistencia(cedula)) {
                                            Conexion.editarPaciente(paciente);
                                        } else {
                                            Conexion.guardarPaciente(paciente);
                                        }
                                        limpiarFicha();
                                        JOptionPane.showMessageDialog(null, "Guardado", "Información", JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Correo electrónico inválido ", "Error Datos", JOptionPane.ERROR_MESSAGE);
                                        txtEmail.requestFocus();
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "El celular debe ser de 10 dígitos", "Error Datos", JOptionPane.ERROR_MESSAGE);
                                    txtCelular.requestFocus();
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Teléfono incorrecto", "Error Datos", JOptionPane.ERROR_MESSAGE);
                                txtTelefono.requestFocus();
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "El grupo sanguíneo debe ser de 3 dígitos o menos", "Error Datos", JOptionPane.ERROR_MESSAGE);
                            txtGrpSangui.requestFocus();
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Debe ingresar al menos un nombre", "Error Datos", JOptionPane.ERROR_MESSAGE);
                        txtNombre.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Debe ingresar al menos un apellido", "Error Datos", JOptionPane.ERROR_MESSAGE);
                    txtApellido1.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "La cédula debe ser de 10 dígitos", "Error Datos", JOptionPane.ERROR_MESSAGE);
                txtCedula.requestFocus();
            }
        } catch (NumberFormatException e) {
            System.out.println("Mal ingreso");
        } catch (SQLException ex) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarMousePressed

    private void limpiarFicha() {
        if (rbAlta.isSelected()) {
            rbAlta.setSelected(false);
        } else if (rbBaja.isSelected()) {
            rbBaja.setSelected(false);
        }
        txtApellido1.setText(null);
        txtApellido2.setText(null);
        txtNombre.setText(null);
        txtHistClinica.setText(null);
        if (rbHombre.isSelected()) {
            rbHombre.setSelected(false);
        } else if (rbMujer.isSelected()) {
            rbMujer.setSelected(false);
        }
        sfDia.setValue(0);
        sfMes.setValue(0);
        sfAnio.setValue(2020);
        spEdad.setValue(0);
        txtGrpSangui.setText(null);
        txtCedula.setText(null);
        txtTelefono.setText(null);
        txtOcupacion.setText(null);
        txtInstruccion.setText(null);
        txtCelular.setText(null);
        txtDireccion.setText(null);
        txtProvincia.setText(null);
        txtEmail.setText(null);
        txtObservaciones.setText(null);
        txaAntP.setText(null);
        txaAntF.setText(null);
        txaAlergias.setText(null);
        txaVacunas.setText(null);
    }

    private void limpiarHClinicas() {
        txtPacienteH.setText(null);
        txtNumeroH.setText(null);
        txaAnamnesis.setText(null);
        txaExploracion.setText(null);
        txaDiagnostico.setText(null);
        txaTratamiento.setText(null);
        DefaultTableModel modeloTabla = new DefaultTableModel();
        modeloTabla.setColumnIdentifiers(new Object[]{"Fecha", "Anamnesis", "Exploración", "Diagnóstico", "Tratamiento"});
        tHConsultas.setModel(modeloTabla);
        btnAnamnesis.setBackground(new Color(103, 127, 166));
        btnExploracion.setBackground(new Color(53, 127, 166));
        btnDiagnostico.setBackground(new Color(53, 127, 166));
        btnTratamiento.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpcionesH(pAnamnesis);
        txaAnamnesis.transferFocus();
    }

    private void btnLimpiarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMousePressed
        // TODO add your handling code here:
        limpiarFicha();
    }//GEN-LAST:event_btnLimpiarMousePressed

    private void btnBorrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarMousePressed
        try {
            // TODO add your handling code here:
            if (Conexion.comprobarExistencia(txtCedula.getText().trim())) {
                Conexion.borrarPaciente(txtCedula.getText());
                limpiarFicha();
                JOptionPane.showMessageDialog(null, "Borrado", "Información", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Paciente no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnBorrarMousePressed

    private void btnNuevoPMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoPMousePressed
        // TODO add your handling code here:
        setColor(btnFicha);
        resetColor(btnCitas);
        resetColor(btnPacientes);
        resetColor(btnHClinicas);
        switchPanelsOpciones(pFichaPaciente);
        limpiarPacientes();
    }//GEN-LAST:event_btnNuevoPMousePressed

    private void rbAlta1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbAlta1MousePressed
        // TODO add your handling code here:
        mostrarP("select nombreCompleto, cedula, celular, historiaClinica, observaciones from paciente where estadoPaciente = \"Alta\";");
        rbBaja1.setSelected(false);
        rbTodos.setSelected(false);
        txtBuscar.setText(null);
    }//GEN-LAST:event_rbAlta1MousePressed

    private void rbBaja1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbBaja1MousePressed
        // TODO add your handling code here:
        mostrarP("select nombreCompleto, cedula, celular, historiaClinica, observaciones from paciente where estadoPaciente = \"Baja\";");
        rbAlta1.setSelected(false);
        rbTodos.setSelected(false);
        txtBuscar.setText(null);
    }//GEN-LAST:event_rbBaja1MousePressed

    private void rbTodosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbTodosMousePressed
        // TODO add your handling code here:
        mostrarP("select nombreCompleto, cedula, celular, historiaClinica, observaciones from paciente;");
        rbBaja1.setSelected(false);
        rbAlta1.setSelected(false);
        txtBuscar.setText(null);
    }//GEN-LAST:event_rbTodosMousePressed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Enter was pressed. Your code goes here.
            if (isNumeric(txtBuscar.getText().trim())) {
                mostrarP("call clinica.recupPorCedula('" + txtBuscar.getText() + "');");
            } else if (isNumeric(txtBuscar.getText().trim()) == false) {
                mostrarP("call clinica.recupPorNombre('" + txtBuscar.getText() + "');");
            }
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    public static boolean isNumeric(String cadena) {

        boolean resultado;

        try {
            Integer.parseInt(cadena);
            resultado = true;
        } catch (NumberFormatException excepcion) {
            resultado = false;
        }

        return resultado;
    }

    private void limpiarPacientes() {
        rbAlta1.setSelected(false);
        rbBaja1.setSelected(false);
        rbTodos.setSelected(false);
        txtBuscar.setText(null);
    }

    private void tPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tPacientesMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tPacientes.getModel();
        int selectedRowIndex = tPacientes.getSelectedRow();
        try {
            setColor(btnFicha);
            resetColor(btnCitas);
            resetColor(btnPacientes);
            resetColor(btnHClinicas);
            switchPanelsOpciones(pFichaPaciente);
            ResultSet rs = Conexion.mostrarPaciente(model.getValueAt(selectedRowIndex, 1).toString());
            while (rs.next()) {
                txtCedula.setText(rs.getString("cedula").trim());
                if (rs.getString("estadoPaciente").equalsIgnoreCase("Alta")) {
                    rbAlta.setSelected(true);
                } else if (rs.getString("estadoPaciente").equalsIgnoreCase("Baja")) {
                    rbBaja.setSelected(true);
                }
                txtApellido1.setText(rs.getString("apellido1").trim());
                txtApellido2.setText(rs.getString("apellido2").trim());
                txtNombre.setText(rs.getString("nombre").trim());
                txtHistClinica.setText(rs.getString("historiaClinica").trim());
                if (rs.getString("sexo").equalsIgnoreCase("Hombre")) {
                    rbHombre.setSelected(true);
                } else if (rs.getString("sexo").equalsIgnoreCase("Mujer")) {
                    rbMujer.setSelected(true);
                }
                String nacimiento = rs.getString("fechaNacimiento");
                String[] parts = nacimiento.split("-");
                sfDia.setValue(Integer.parseInt(parts[2]));
                sfMes.setValue(Integer.parseInt(parts[1]));
                sfAnio.setValue(Integer.parseInt(parts[0]));
                spEdad.setValue(rs.getInt("edad"));
                txtGrpSangui.setText(rs.getString("grupoSanguineo").trim());
                txtTelefono.setText(rs.getString("telefono").trim());
                txtCelular.setText(rs.getString("celular").trim());
                txtDireccion.setText(rs.getString("direccion").trim());
                txtProvincia.setText(rs.getString("provincia").trim());
                txtEmail.setText(rs.getString("email").trim());
                txtObservaciones.setText(rs.getString("observaciones").trim());
                txaAntP.setText(rs.getString("antPersonales").trim());
                txaAntF.setText(rs.getString("antFamiliares").trim());
                txaAlergias.setText(rs.getString("alergias").trim());
                txaVacunas.setText(rs.getString("vacunas").trim());
                txtOcupacion.setText(rs.getString("ocupacion").trim());
                txtInstruccion.setText(rs.getString("instruccion").trim());
                cedula = rs.getString("cedula").trim();
                nombreCompleto = rs.getString("nombreCompleto").trim();
                historiaClinica = Integer.parseInt(rs.getString("historiaClinica").trim());
                mostrarH("select num, fecha, anamnesis, exploracion, diagnostico, tratamiento from hclinicas where cedula = '" + cedula + "';");
                if (historiaClinica != 0) {
                    txtNumeroH.setText(String.valueOf(historiaClinica));
                } else if (historiaClinica == 0) {
                    txtNumeroH.setText(null);
                }

                if (nombreCompleto.equals("null")) {
                    txtPacienteH.setText(null);
                } else {
                    txtPacienteH.setText(nombreCompleto);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpiarPacientes();
    }//GEN-LAST:event_tPacientesMouseClicked

    private void txtBuscarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarMousePressed
        // TODO add your handling code here:
        rbBaja1.setSelected(false);
        rbAlta1.setSelected(false);
        rbTodos.setSelected(false);
    }//GEN-LAST:event_txtBuscarMousePressed

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k >= 58 && k <= 126 || k >= 33 && k <= 47) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "Solo ingresar números", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtCedula.transferFocus();
        }
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void txtCelularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCelularKeyPressed
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k >= 58 && k <= 126 || k >= 33 && k <= 47) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "Solo ingresar números", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtCelular.transferFocus();
        }
    }//GEN-LAST:event_txtCelularKeyPressed

    private void txtTelefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyPressed
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k >= 58 && k <= 126 || k >= 33 && k <= 47) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "Solo ingresar números", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtTelefono.transferFocus();
        }
    }//GEN-LAST:event_txtTelefonoKeyPressed

    private void txtHistClinicaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHistClinicaKeyPressed
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k >= 58 && k <= 126 || k >= 33 && k <= 47) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "Solo ingresar números", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtHistClinica.transferFocus();
        }
    }//GEN-LAST:event_txtHistClinicaKeyPressed

    private void btnLimpiarHMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarHMousePressed
        // TODO add your handling code here:
        txaAnamnesis.setText(null);
        txaExploracion.setText(null);
        txaDiagnostico.setText(null);
        txaTratamiento.setText(null);
        btnAnamnesis.setBackground(new Color(103, 127, 166));
        btnExploracion.setBackground(new Color(53, 127, 166));
        btnDiagnostico.setBackground(new Color(53, 127, 166));
        btnTratamiento.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpcionesH(pAnamnesis);
        txaAnamnesis.transferFocus();
    }//GEN-LAST:event_btnLimpiarHMousePressed

    private void btnBorrarHMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarHMousePressed
        // TODO add your handling code here:
        try {
            Conexion.borrarHClinica(String.valueOf(numHC));
            num.clear();
            mostrarH("select num, fecha, anamnesis, exploracion, diagnostico, tratamiento from hclinicas where cedula = '" + cedula + "';");
            JOptionPane.showMessageDialog(null, "Borrado", "Información", JOptionPane.INFORMATION_MESSAGE);
            txaAnamnesis.setText(null);
            txaExploracion.setText(null);
            txaDiagnostico.setText(null);
            txaTratamiento.setText(null);
            obtenerFecha();
            /*sfDiaH.setValue(0);
            sfMesH.setValue(0);
            sfAnioH.setValue(2020);*/
            btnAnamnesis.setBackground(new Color(103, 127, 166));
            btnExploracion.setBackground(new Color(53, 127, 166));
            btnDiagnostico.setBackground(new Color(53, 127, 166));
            btnTratamiento.setBackground(new Color(53, 127, 166));
            switchPanelsSubOpcionesH(pAnamnesis);
            txaAnamnesis.transferFocus();
        } catch (SQLException ex) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "No borrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBorrarHMousePressed

    private void btnGuardarHMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarHMousePressed
        try {
            // TODO add your handling code here:
            if (Conexion.comprobarExistencia(numHC)) {
                fechaH = sfAnioH.getValue() + "-" + sfMesH.getValue() + "-" + sfDiaH.getValue();
                anamnesis = txaAnamnesis.getText().trim();
                exploracion = txaExploracion.getText().trim();
                diagnostico = txaDiagnostico.getText().trim();
                tratamiento = txaTratamiento.getText().trim();
                HistClinica histClinica = new HistClinica(cedula, nombreCompleto, fechaH, anamnesis, exploracion, diagnostico, tratamiento);
                Conexion.editarHClinica(histClinica, numHC);
                JOptionPane.showMessageDialog(null, "Editado", "Información", JOptionPane.INFORMATION_MESSAGE);
                txaAnamnesis.setText(null);
                txaExploracion.setText(null);
                txaDiagnostico.setText(null);
                txaTratamiento.setText(null);
                obtenerFecha();
                /*sfDiaH.setValue(0);
                sfMesH.setValue(0);
                sfAnioH.setValue(2020);*/
                btnAnamnesis.setBackground(new Color(103, 127, 166));
                btnExploracion.setBackground(new Color(53, 127, 166));
                btnDiagnostico.setBackground(new Color(53, 127, 166));
                btnTratamiento.setBackground(new Color(53, 127, 166));
                switchPanelsSubOpcionesH(pAnamnesis);
                txaAnamnesis.transferFocus();
                num.clear();
                mostrarH("select num, fecha, anamnesis, exploracion, diagnostico, tratamiento from hclinicas where cedula = '" + cedula + "';");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "No editado", "Error", JOptionPane.ERROR_MESSAGE);
        }
        try {
            if (Conexion.comprobarExistencia(numHC) == false) {
                fechaH = sfAnioH.getValue() + "-" + sfMesH.getValue() + "-" + sfDiaH.getValue();
                //fechaH = sfDiaH.getValue() + "-" + sfMesH.getValue() + "-" + sfAnioH.getValue();
                anamnesis = txaAnamnesis.getText().trim();
                exploracion = txaExploracion.getText().trim();
                diagnostico = txaDiagnostico.getText().trim();
                tratamiento = txaTratamiento.getText().trim();
                HistClinica histClinica = new HistClinica(cedula, nombreCompleto, fechaH, anamnesis, exploracion, diagnostico, tratamiento);
                try {
                    Conexion.guardarHistClinica(histClinica);
                    JOptionPane.showMessageDialog(null, "Guardado", "Información", JOptionPane.INFORMATION_MESSAGE);
                    txaAnamnesis.setText(null);
                    txaExploracion.setText(null);
                    txaDiagnostico.setText(null);
                    txaTratamiento.setText(null);
                    obtenerFecha();
                    /*sfDiaH.setValue(0);
                    sfMesH.setValue(0);
                    sfAnioH.setValue(2020);*/
                    btnAnamnesis.setBackground(new Color(103, 127, 166));
                    btnExploracion.setBackground(new Color(53, 127, 166));
                    btnDiagnostico.setBackground(new Color(53, 127, 166));
                    btnTratamiento.setBackground(new Color(53, 127, 166));
                    switchPanelsSubOpcionesH(pAnamnesis);
                    txaAnamnesis.transferFocus();
                    num.clear();
                    mostrarH("select num, fecha, anamnesis, exploracion, diagnostico, tratamiento from hclinicas where cedula = '" + cedula + "';");
                } catch (SQLException ex) {
                    Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "No guardado", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "No guardado 1", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnGuardarHMousePressed

    private void mostrarH(String cadena) {
        DefaultTableModel modelo = new DefaultTableModel();
        ResultSet rs = Conexion.getTabla(cadena);
        modelo.setColumnIdentifiers(new Object[]{"Fecha", "Anamnesis", "Exploración", "Diagnóstico", "Tratamiento"});
        try {
            while (rs.next()) {
                modelo.addRow(new Object[]{rs.getString("fecha"), rs.getString("anamnesis"), rs.getString("exploracion"), rs.getString("diagnostico"), rs.getString("tratamiento")});
                num.add(Integer.parseInt(rs.getString("Num")));
            }
            tHConsultas.setModel(modelo);
            /*for (int i : num) {
                System.out.println("num" + i);
            }
            System.out.println("");
            System.out.println("numHC" + numHC);
            System.out.println("-------");*/
        } catch (SQLException e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Paciente no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void btnTratamientoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTratamientoMousePressed
        // TODO add your handling code here:
        btnTratamiento.setBackground(new Color(103, 127, 166));
        btnAnamnesis.setBackground(new Color(53, 127, 166));
        btnExploracion.setBackground(new Color(53, 127, 166));
        btnDiagnostico.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpcionesH(pTratamiento);
        txaTratamiento.transferFocus();
    }//GEN-LAST:event_btnTratamientoMousePressed

    private void btnDiagnosticoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDiagnosticoMousePressed
        // TODO add your handling code here:
        btnDiagnostico.setBackground(new Color(103, 127, 166));
        btnAnamnesis.setBackground(new Color(53, 127, 166));
        btnExploracion.setBackground(new Color(53, 127, 166));
        btnTratamiento.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpcionesH(pDiagnostico);
        txaDiagnostico.transferFocus();
    }//GEN-LAST:event_btnDiagnosticoMousePressed

    private void btnExploracionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExploracionMousePressed
        // TODO add your handling code here:
        btnExploracion.setBackground(new Color(103, 127, 166));
        btnAnamnesis.setBackground(new Color(53, 127, 166));
        btnDiagnostico.setBackground(new Color(53, 127, 166));
        btnTratamiento.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpcionesH(pExploracion);
        txaExploracion.transferFocus();
    }//GEN-LAST:event_btnExploracionMousePressed

    private void btnAnamnesisMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAnamnesisMousePressed
        // TODO add your handling code here:
        btnAnamnesis.setBackground(new Color(103, 127, 166));
        btnExploracion.setBackground(new Color(53, 127, 166));
        btnDiagnostico.setBackground(new Color(53, 127, 166));
        btnTratamiento.setBackground(new Color(53, 127, 166));
        switchPanelsSubOpcionesH(pAnamnesis);
        txaAnamnesis.transferFocus();
    }//GEN-LAST:event_btnAnamnesisMousePressed

    private void tHConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tHConsultasMouseClicked
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) tHConsultas.getModel();
            int selectedRowIndex = tHConsultas.getSelectedRow();
            numHC = num.get(selectedRowIndex);
            //System.out.println("numHC " + numHC);
            ResultSet rs = Conexion.mostrarHClinica(String.valueOf(num.get(selectedRowIndex)));
            while (rs.next()) {
                txaAnamnesis.setText(rs.getString("anamnesis").trim());
                txaExploracion.setText(rs.getString("exploracion").trim());
                txaDiagnostico.setText(rs.getString("diagnostico").trim());
                txaTratamiento.setText(rs.getString("tratamiento").trim());
                String[] fecha = rs.getString("fecha").split("-");
                sfDiaH.setValue(Integer.parseInt(fecha[2]));
                sfMesH.setValue(Integer.parseInt(fecha[1]));
                sfAnioH.setValue(Integer.parseInt(fecha[0]));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Clinica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tHConsultasMouseClicked

    private void txaAnamnesisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaAnamnesisKeyPressed
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k == 39 || k == 34) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No ingresar comilla", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtTelefono.transferFocus();
        }
    }//GEN-LAST:event_txaAnamnesisKeyPressed

    private void txaAntPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaAntPKeyPressed
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k == 39 || k == 34) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No ingresar comilla", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtTelefono.transferFocus();
        }
    }//GEN-LAST:event_txaAntPKeyPressed

    private void txaAntFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaAntFKeyPressed
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k == 39 || k == 34) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No ingresar comilla", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtTelefono.transferFocus();
        }
    }//GEN-LAST:event_txaAntFKeyPressed

    private void txaAlergiasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaAlergiasKeyPressed
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k == 39 || k == 34) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No ingresar comilla", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtTelefono.transferFocus();
        }
    }//GEN-LAST:event_txaAlergiasKeyPressed

    private void txaVacunasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaVacunasKeyPressed
        // TODO add your handling code here:
        int k = (int) evt.getKeyChar();
        if (k == 39 || k == 34) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "No ingresar comilla", "Error Datos", JOptionPane.ERROR_MESSAGE);
        }
        if (k == 10) {
            txtTelefono.transferFocus();
        }
    }//GEN-LAST:event_txaVacunasKeyPressed

    public void obtenerFecha() {
        long now = System.currentTimeMillis();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String nowF = sdf.format(now);
        String[] fechaActual = nowF.split("/");
        sfDiaH.setValue(Integer.parseInt(fechaActual[0]));
        sfMesH.setValue(Integer.parseInt(fechaActual[1]));
        sfAnioH.setValue(Integer.parseInt(fechaActual[2]));
    }

    public void switchPanelsSubOpcionesH(JPanel panel) {
        pSubOpcionesH.removeAll();
        pSubOpcionesH.add(panel);
        pSubOpcionesH.repaint();
        pSubOpcionesH.revalidate();
    }

    public void switchPanelsSubOpciones(JPanel panel) {
        pSubOpciones.removeAll();
        pSubOpciones.add(panel);
        pSubOpciones.repaint();
        pSubOpciones.revalidate();
    }

    public void switchPanelsOpciones(JPanel panel) {
        pCambioOpciones.removeAll();
        pCambioOpciones.add(panel);
        pCambioOpciones.repaint();
        pCambioOpciones.revalidate();
    }

    void setColor(JPanel panel) {
        panel.setBackground(new Color(103, 127, 166));
    }

    void resetColor(JPanel panel) {
        panel.setBackground(new Color(53, 127, 166));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clinica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clinica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAlergias;
    private javax.swing.JLabel btnAnamnesis;
    private javax.swing.JLabel btnAntecedentesF;
    private javax.swing.JLabel btnAntecedentesP;
    private javax.swing.JLabel btnBorrar;
    private javax.swing.JLabel btnBorrarH;
    private javax.swing.JPanel btnCitas;
    private javax.swing.JLabel btnDiagnostico;
    private javax.swing.JLabel btnExploracion;
    private javax.swing.JPanel btnFicha;
    private javax.swing.JLabel btnGuardar;
    private javax.swing.JLabel btnGuardarH;
    private javax.swing.JPanel btnHClinicas;
    private javax.swing.JLabel btnLimpiar;
    private javax.swing.JLabel btnLimpiarH;
    private javax.swing.JLabel btnNuevoP;
    private javax.swing.JPanel btnPacientes;
    private javax.swing.JLabel btnSalir;
    private javax.swing.JLabel btnTratamiento;
    private javax.swing.JLabel btnVacunas;
    private javax.swing.JLabel iconCitas;
    private javax.swing.JLabel iconFicha;
    private javax.swing.JLabel iconHClinicas;
    private javax.swing.JLabel iconPacientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jspAlergias;
    private javax.swing.JScrollPane jspAnamnesis;
    private javax.swing.JScrollPane jspAntF;
    private javax.swing.JScrollPane jspAntP;
    private javax.swing.JScrollPane jspDiagnostico;
    private javax.swing.JScrollPane jspExploracion;
    private javax.swing.JScrollPane jspTratamiento;
    private javax.swing.JScrollPane jspVacunas;
    private javax.swing.JLabel lblApellido1;
    private javax.swing.JLabel lblApellido2;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblCitas;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblEstadoPaciente;
    private javax.swing.JLabel lblFechaH;
    private javax.swing.JLabel lblFicha;
    private javax.swing.JLabel lblGrpSangui;
    private javax.swing.JLabel lblHClinicas;
    private javax.swing.JLabel lblHConsultas;
    private javax.swing.JLabel lblHistCLinica;
    private javax.swing.JLabel lblInstruccion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblObservaciones;
    private javax.swing.JLabel lblOcupacion;
    private javax.swing.JLabel lblPacienteH;
    private javax.swing.JLabel lblPacientes;
    private javax.swing.JLabel lblProvincia;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblfechaNacimiento;
    private javax.swing.JPanel pAlergias;
    private javax.swing.JPanel pAnamnesis;
    private javax.swing.JPanel pAntF;
    private javax.swing.JPanel pAntP;
    private javax.swing.JLayeredPane pCambioOpciones;
    private javax.swing.JPanel pCitas;
    private javax.swing.JPanel pDiagnostico;
    private javax.swing.JPanel pExploracion;
    private javax.swing.JPanel pFichaPaciente;
    private javax.swing.JPanel pHClinicas;
    private javax.swing.JPanel pOpciones;
    private javax.swing.JPanel pPacientes;
    private javax.swing.JLayeredPane pSubOpciones;
    private javax.swing.JLayeredPane pSubOpcionesH;
    private javax.swing.JPanel pTratamiento;
    private javax.swing.JPanel pVacunas;
    private javax.swing.JPanel pVista;
    private javax.swing.JRadioButton rbAlta;
    private javax.swing.JRadioButton rbAlta1;
    private javax.swing.JRadioButton rbBaja;
    private javax.swing.JRadioButton rbBaja1;
    private javax.swing.JRadioButton rbHombre;
    private javax.swing.JRadioButton rbMujer;
    private javax.swing.JRadioButton rbTodos;
    private com.toedter.calendar.JYearChooser sfAnio;
    private com.toedter.calendar.JYearChooser sfAnioH;
    private com.toedter.components.JSpinField sfDia;
    private com.toedter.components.JSpinField sfDiaH;
    private com.toedter.components.JSpinField sfMes;
    private com.toedter.components.JSpinField sfMesH;
    private javax.swing.JSpinner spEdad;
    private javax.swing.JTable tHConsultas;
    private javax.swing.JTable tPacientes;
    private javax.swing.JTextArea txaAlergias;
    private javax.swing.JTextArea txaAnamnesis;
    private javax.swing.JTextArea txaAntF;
    private javax.swing.JTextArea txaAntP;
    private javax.swing.JTextArea txaDiagnostico;
    private javax.swing.JTextArea txaExploracion;
    private javax.swing.JTextArea txaTratamiento;
    private javax.swing.JTextArea txaVacunas;
    private javax.swing.JTextField txtApellido1;
    private javax.swing.JTextField txtApellido2;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGrpSangui;
    private javax.swing.JTextField txtHistClinica;
    private javax.swing.JTextField txtInstruccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JLabel txtNumeroH;
    private javax.swing.JTextField txtObservaciones;
    private javax.swing.JTextField txtOcupacion;
    private javax.swing.JLabel txtPacienteH;
    private javax.swing.JTextField txtProvincia;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
